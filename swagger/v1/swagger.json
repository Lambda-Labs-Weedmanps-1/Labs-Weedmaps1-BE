{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1",
    "description": "Yelp clone api"
  },
  "servers": [
    {
      "url": "https://development.gigantic-server.com/v1",
      "description": "Development server"
    },
    {
      "url": "https://staging.gigantic-server.com/v1",
      "description": "Staging server"
    },
    {
      "url": "https://api.gigantic-server.com/v1",
      "description": "Production server"
    }
  ],
  "basePath": "/api/v1",
  "paths": {
    "/businesses": {
      "get": {
        "summary": "Gets all businesses",
        "tags": [
          "Business"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "All businesses",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Businesses"
            }
          }
        }
      }
    },
    "/businesses/{id}": {
      "get": {
        "summary": "Get a business by id ",
        "tags": [
          "Business"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Business by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Businesses"
            }
          }
        }
      },
      "put": {
        "summary": "Updated business by id",
        "tags": [
          "Business"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "business",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Businesses"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated business by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Businesses"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete business by id",
        "tags": [
          "Business"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete business by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Businesses"
            }
          }
        }
      }
    },
    "/users/{id}/businesses": {
      "post": {
        "summary": "Creates a business",
        "tags": [
          "Business"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "business",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Businesses"
            }
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Business created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Businesses"
            }
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/customers": {
      "get": {
        "summary": "Gets all customers",
        "tags": [
          "Customer"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "All users",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Customers"
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "summary": "Get a customer by id ",
        "tags": [
          "Customer"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Customer by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customers"
            }
          }
        }
      },
      "put": {
        "summary": "Updated customer by id",
        "tags": [
          "Customer"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Customers",
              "required": [
                "username",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated customer by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete customer by id",
        "tags": [
          "Customer"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete customer by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customers"
            }
          }
        }
      }
    },
    "/users/{id}/customers": {
      "post": {
        "summary": "Creates a customer",
        "tags": [
          "Customer"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Customers"
            }
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Customer created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customers"
            }
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "summary": "Get a item by id ",
        "tags": [
          "Item"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "ApiKey": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Item by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Items"
            }
          }
        }
      },
      "put": {
        "summary": "Updated item by id",
        "tags": [
          "Item"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "item",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated item by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Items"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete item by id",
        "tags": [
          "Item"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete item by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Items"
            }
          }
        }
      }
    },
    "/menus/{id}/items": {
      "post": {
        "summary": "Creates an item",
        "tags": [
          "Item"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Items"
            }
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Item created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Items"
            }
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/menus/{id}": {
      "get": {
        "summary": "Get a menu by id ",
        "tags": [
          "Menu"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Menu by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Menus"
            }
          }
        }
      },
      "put": {
        "summary": "Updated menu by id",
        "tags": [
          "Menu"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "menu",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Menus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated menu by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Menus"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete menu by id",
        "tags": [
          "Menu"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete menu by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Menus"
            }
          }
        }
      }
    },
    "/businesses/{id}/menus": {
      "post": {
        "summary": "Creates a menu",
        "tags": [
          "Menu"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "menu",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Menus"
            }
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Menu created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Menus"
            }
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "summary": "Get a review by id ",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Review by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Reviews"
            }
          }
        }
      },
      "put": {
        "summary": "Updated review by id",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "review",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated review by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Reviews"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete review by id",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete review by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Revies"
            }
          }
        }
      }
    },
    "/customers/{id}/reviews": {
      "get": {
        "summary": "Get a review by id ",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Review by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Reviews"
            }
          }
        }
      },
      "post": {
        "summary": "Creates a menu",
        "tags": [
          "Review"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "reveiw",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Reviews"
            }
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Review created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Reviews"
            }
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Gets all users",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "All users",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "summary": "Creates a customer",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users",
              "required": [
                "username",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Users"
            }
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by id ",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "put": {
        "summary": "Updated user by id",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Users",
              "required": [
                "username",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated user by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user by id",
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete user by id",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "wallet": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "email",
        "password"
      ]
    },
    "Customers": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Businesses": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "building_number": {
          "type": "string"
        },
        "theme": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hours": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "lat": {
          "type": "string"
        },
        "recommended": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Menus": {
      "type": "object",
      "properties": {
        "business_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Reviews": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "integer"
        },
        "business_id": {
          "type": "integer"
        },
        "review": {
          "type": "string"
        },
        "rating": {
          "type": "number"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "Items": {
      "type": "object",
      "properties": {
        "menu_id": {
          "type": "integer"
        },
        "item_name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "category": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    },
    "ApiKey": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  }
}